// <auto-generated />
using System;
using GamesStation.SuperExampleGame.Infrastructure;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace GamesStation.SuperExampleGame.Infrastructure.Migrations
{
    [DbContext(typeof(ApplicationContext))]
    [Migration("20230214161833_First-Migration")]
    partial class FirstMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.17")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("GamesStation.SuperExampleGame.Domain.Entities.Character", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("Id");

                    b.ToTable("Character");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "PulpoManotas"
                        });
                });

            modelBuilder.Entity("GamesStation.SuperExampleGame.Domain.Entities.CharacterInventory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CharacterId")
                        .HasColumnType("int");

                    b.Property<bool>("Equipped")
                        .HasColumnType("bit");

                    b.Property<int>("ItemId")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CharacterId");

                    b.HasIndex("ItemId")
                        .IsUnique();

                    b.ToTable("CharacterInventory");
                });

            modelBuilder.Entity("GamesStation.SuperExampleGame.Domain.Entities.CharacterMoney", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CharacterId")
                        .HasColumnType("int");

                    b.Property<int>("CurrencyTypeId")
                        .HasColumnType("int");

                    b.Property<int>("Money")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CharacterId");

                    b.HasIndex("CurrencyTypeId")
                        .IsUnique();

                    b.ToTable("CharacterMoney");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CharacterId = 1,
                            CurrencyTypeId = 1,
                            Money = 10000
                        },
                        new
                        {
                            Id = 2,
                            CharacterId = 1,
                            CurrencyTypeId = 2,
                            Money = 10000
                        });
                });

            modelBuilder.Entity("GamesStation.SuperExampleGame.Domain.Entities.CurrencyType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("Id");

                    b.ToTable("CurrencyType");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Oro"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Diamante"
                        });
                });

            modelBuilder.Entity("GamesStation.SuperExampleGame.Domain.Entities.Item", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("ItemTypeId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.HasKey("Id");

                    b.HasIndex("ItemTypeId");

                    b.ToTable("Item");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ItemTypeId = 1,
                            Name = "Espada"
                        },
                        new
                        {
                            Id = 2,
                            ItemTypeId = 2,
                            Name = "Pechera"
                        },
                        new
                        {
                            Id = 3,
                            ItemTypeId = 3,
                            Name = "Runa de Velocidad"
                        },
                        new
                        {
                            Id = 4,
                            ItemTypeId = 3,
                            Name = "Runa de Fuerza"
                        },
                        new
                        {
                            Id = 5,
                            ItemTypeId = 3,
                            Name = "Runa de Resistencia"
                        });
                });

            modelBuilder.Entity("GamesStation.SuperExampleGame.Domain.Entities.ItemPrice", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CurrencyTypeId")
                        .HasColumnType("int");

                    b.Property<int>("ItemId")
                        .HasColumnType("int");

                    b.Property<int>("Price")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CurrencyTypeId");

                    b.HasIndex("ItemId");

                    b.ToTable("ItemPrice");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CurrencyTypeId = 1,
                            ItemId = 1,
                            Price = 10
                        },
                        new
                        {
                            Id = 2,
                            CurrencyTypeId = 2,
                            ItemId = 1,
                            Price = 10
                        },
                        new
                        {
                            Id = 3,
                            CurrencyTypeId = 1,
                            ItemId = 2,
                            Price = 15
                        },
                        new
                        {
                            Id = 4,
                            CurrencyTypeId = 1,
                            ItemId = 3,
                            Price = 5
                        },
                        new
                        {
                            Id = 5,
                            CurrencyTypeId = 1,
                            ItemId = 4,
                            Price = 5
                        },
                        new
                        {
                            Id = 6,
                            CurrencyTypeId = 1,
                            ItemId = 5,
                            Price = 5
                        });
                });

            modelBuilder.Entity("GamesStation.SuperExampleGame.Domain.Entities.ItemSkill", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Grade")
                        .HasColumnType("int");

                    b.Property<int>("ItemId")
                        .HasColumnType("int");

                    b.Property<int>("LevelTypeId")
                        .HasColumnType("int");

                    b.Property<int>("SkillTypeId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ItemId");

                    b.HasIndex("LevelTypeId");

                    b.HasIndex("SkillTypeId");

                    b.ToTable("ItemSkill");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Grade = 3,
                            ItemId = 1,
                            LevelTypeId = 1,
                            SkillTypeId = 1
                        },
                        new
                        {
                            Id = 2,
                            Grade = 6,
                            ItemId = 1,
                            LevelTypeId = 1,
                            SkillTypeId = 2
                        },
                        new
                        {
                            Id = 3,
                            Grade = 3,
                            ItemId = 2,
                            LevelTypeId = 1,
                            SkillTypeId = 2
                        },
                        new
                        {
                            Id = 4,
                            Grade = 6,
                            ItemId = 2,
                            LevelTypeId = 1,
                            SkillTypeId = 3
                        },
                        new
                        {
                            Id = 5,
                            Grade = 1,
                            ItemId = 3,
                            LevelTypeId = 1,
                            SkillTypeId = 1
                        },
                        new
                        {
                            Id = 6,
                            Grade = 1,
                            ItemId = 4,
                            LevelTypeId = 1,
                            SkillTypeId = 2
                        },
                        new
                        {
                            Id = 7,
                            Grade = 1,
                            ItemId = 5,
                            LevelTypeId = 1,
                            SkillTypeId = 3
                        });
                });

            modelBuilder.Entity("GamesStation.SuperExampleGame.Domain.Entities.ItemType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("Id");

                    b.ToTable("ItemType");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Arma"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Armadura"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Accesorio"
                        });
                });

            modelBuilder.Entity("GamesStation.SuperExampleGame.Domain.Entities.LevelType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<int?>("PreviousLevelTypeId")
                        .HasColumnType("int");

                    b.Property<int>("Range")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PreviousLevelTypeId");

                    b.ToTable("LevelType");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Bronce",
                            Range = 0
                        },
                        new
                        {
                            Id = 2,
                            Name = "Plata",
                            PreviousLevelTypeId = 1,
                            Range = 10
                        },
                        new
                        {
                            Id = 3,
                            Name = "Oro",
                            PreviousLevelTypeId = 2,
                            Range = 20
                        },
                        new
                        {
                            Id = 4,
                            Name = "Platino",
                            PreviousLevelTypeId = 3,
                            Range = 30
                        },
                        new
                        {
                            Id = 5,
                            Name = "Titanio",
                            PreviousLevelTypeId = 4,
                            Range = 40
                        });
                });

            modelBuilder.Entity("GamesStation.SuperExampleGame.Domain.Entities.SkillType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("Id");

                    b.ToTable("SkillType");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Velocidad"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Fuerza"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Resistencia"
                        });
                });

            modelBuilder.Entity("GamesStation.SuperExampleGame.Domain.Entities.CharacterInventory", b =>
                {
                    b.HasOne("GamesStation.SuperExampleGame.Domain.Entities.Character", "Character")
                        .WithMany("InventoryList")
                        .HasForeignKey("CharacterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GamesStation.SuperExampleGame.Domain.Entities.Item", "Item")
                        .WithOne("CharacterInventory")
                        .HasForeignKey("GamesStation.SuperExampleGame.Domain.Entities.CharacterInventory", "ItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Character");

                    b.Navigation("Item");
                });

            modelBuilder.Entity("GamesStation.SuperExampleGame.Domain.Entities.CharacterMoney", b =>
                {
                    b.HasOne("GamesStation.SuperExampleGame.Domain.Entities.Character", "Character")
                        .WithMany("MoneyList")
                        .HasForeignKey("CharacterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GamesStation.SuperExampleGame.Domain.Entities.CurrencyType", "CurrencyType")
                        .WithOne("CharacterMoney")
                        .HasForeignKey("GamesStation.SuperExampleGame.Domain.Entities.CharacterMoney", "CurrencyTypeId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Character");

                    b.Navigation("CurrencyType");
                });

            modelBuilder.Entity("GamesStation.SuperExampleGame.Domain.Entities.Item", b =>
                {
                    b.HasOne("GamesStation.SuperExampleGame.Domain.Entities.ItemType", "ItemType")
                        .WithMany("Items")
                        .HasForeignKey("ItemTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ItemType");
                });

            modelBuilder.Entity("GamesStation.SuperExampleGame.Domain.Entities.ItemPrice", b =>
                {
                    b.HasOne("GamesStation.SuperExampleGame.Domain.Entities.CurrencyType", "CurrencyType")
                        .WithMany("ItemPrices")
                        .HasForeignKey("CurrencyTypeId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("GamesStation.SuperExampleGame.Domain.Entities.Item", "Item")
                        .WithMany("PriceList")
                        .HasForeignKey("ItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CurrencyType");

                    b.Navigation("Item");
                });

            modelBuilder.Entity("GamesStation.SuperExampleGame.Domain.Entities.ItemSkill", b =>
                {
                    b.HasOne("GamesStation.SuperExampleGame.Domain.Entities.Item", "Item")
                        .WithMany("SkillList")
                        .HasForeignKey("ItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GamesStation.SuperExampleGame.Domain.Entities.LevelType", "LevelType")
                        .WithMany("ItemSkills")
                        .HasForeignKey("LevelTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GamesStation.SuperExampleGame.Domain.Entities.SkillType", "SkillType")
                        .WithMany("ItemSkills")
                        .HasForeignKey("SkillTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Item");

                    b.Navigation("LevelType");

                    b.Navigation("SkillType");
                });

            modelBuilder.Entity("GamesStation.SuperExampleGame.Domain.Entities.LevelType", b =>
                {
                    b.HasOne("GamesStation.SuperExampleGame.Domain.Entities.LevelType", "PreviousLevelType")
                        .WithMany()
                        .HasForeignKey("PreviousLevelTypeId");

                    b.Navigation("PreviousLevelType");
                });

            modelBuilder.Entity("GamesStation.SuperExampleGame.Domain.Entities.Character", b =>
                {
                    b.Navigation("InventoryList");

                    b.Navigation("MoneyList");
                });

            modelBuilder.Entity("GamesStation.SuperExampleGame.Domain.Entities.CurrencyType", b =>
                {
                    b.Navigation("CharacterMoney");

                    b.Navigation("ItemPrices");
                });

            modelBuilder.Entity("GamesStation.SuperExampleGame.Domain.Entities.Item", b =>
                {
                    b.Navigation("CharacterInventory");

                    b.Navigation("PriceList");

                    b.Navigation("SkillList");
                });

            modelBuilder.Entity("GamesStation.SuperExampleGame.Domain.Entities.ItemType", b =>
                {
                    b.Navigation("Items");
                });

            modelBuilder.Entity("GamesStation.SuperExampleGame.Domain.Entities.LevelType", b =>
                {
                    b.Navigation("ItemSkills");
                });

            modelBuilder.Entity("GamesStation.SuperExampleGame.Domain.Entities.SkillType", b =>
                {
                    b.Navigation("ItemSkills");
                });
#pragma warning restore 612, 618
        }
    }
}
